class Solution {
    public int lengthOfLongestSubstring(String s) {

        //O(2N)
    //     Set<Character> chars=new HashSet<Character>();
    //     int l=0;
    //     int res=0;
    //     int r=0;
    //      while(r<s.length()){

    //         if(!chars.contains(s.charAt(r))){
    //         chars.add(s.charAt(r));
    //         r++;
    //         res=Math.max(res,r-l);
            
    //      }
    //      else{
     
    //      chars.remove(s.charAt(l));
    //   l++;
    //      }
        
    // } return res;


//O(N)
        Map<Character,Integer> map=new HashMap<Character,Integer>();
        int l=0;
        int res=0;
        int r=0;
         while(r<s.length()){
            if(map.containsKey(s.charAt(r))){
                l=Math.max(map.get(s.charAt(r))+1,l);
            }
            res=Math.max(res,r-l+1);  
            map.put(s.charAt(r),r);
            r++;
         }  
        return res;


    }
}
