class Solution {
    public int findDuplicate(int[] nums) {

        // Hare and tortise
        int fast = nums[0];
        int slow = nums[0];

        do {
            slow = nums[slow];
            fast = nums[nums[fast]];
        } while (nums[slow] != nums[fast]);

        fast = nums[0];// fast will be first element

        //move one point at a time 
        while (slow != fast) {
            slow = nums[slow];
            fast = nums[fast];
        }
        return fast;
    }

}

// Hashing

    HashMap<Integer, Integer> map = new HashMap<Integer, Integer>();
    int i;
    for (i = 0; i < nums.length; i++) {
        if (map.containsKey(nums[i]))
            break;
        map.put(nums[i], 1);
    }
    return nums[i];

    }

    }
