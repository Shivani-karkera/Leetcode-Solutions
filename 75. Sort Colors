//DNF ALGO

class Solution {
    public void sortColors(int[] nums) {

        // O(N)
        int low = 0;
        int high = nums.length - 1;
        int mid = 0;
        int temp;

        while (mid <= high) {
            if (nums[mid] == 0) {
                temp = nums[low];
                nums[low] = nums[mid];
                nums[mid] = temp;
                low++;
                mid++;
            } else if (nums[mid] == 1)
                mid++;
            else {
                temp = nums[mid];
                nums[mid] = nums[high];
                nums[high] = temp;
                high--;
            }
        }

        // optimal o(2N)
        // int red=0;
        // int white=0;
        // int blue=0;

        // for(int i=0;i<nums.length;i++){
        // if(nums[i]==0)
        // red++;
        // else if(nums[i]==1)
        // white++;
        // else
        // blue++;
        // }
        // int i=0;
        // while(red!=0){
        // nums[i++]=0;
        // red--;
        // }
        // while(white!=0){
        // nums[i++]=1;
        // white--;
        // }
        // while(blue!=0){
        // nums[i++]=2;
        // blue--;
        // }
        // System.out.println(nums);
    }
}
